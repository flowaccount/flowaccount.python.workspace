service: etl-dynamodb

frameworkVersion: '3'

useDotenv: true

plugins:
  - serverless-package-external
  - serverless-glue
  - serverless-step-functions

custom:
  packageExternal:
    external:
      - '../../flowaccount'

package:
  patterns:
    - '!node_modules/**'
    - '!package-lock.json'
    - '!__pycache__/**'
    - '!.pytest_cache/**'
    - '!BUILD'
    - '!**/BUILD'
    - '!config/**'
    - '!glue.yml'
    - '!glue-scripts/**'
    - '!./stepfunctions.yml'

provider:
  name: aws
  runtime: ${env:RUNTIME, "python3.8"}
  stage: ${opt:stage, "staging"}
  region: ${env:AWS_REGION, "ap-southeast-1"}
  layers:
    - ${file(./config/${opt:stage}/layers.yml):AwsWranglerLayer}

functions:
  load-hubspot:
    handler: handlers/load_hubspot.handle
    role: loadHubSpotRole
    description: Load latest open platform status to HubSpot
    environment:
      CATALOG_DB: ${env:CLEAN_CATALOG}
      CATALOG_TABLE: dynamodb_flowaccount_open_platform_company_user_v2
      REDSHIFT_SECRET_ARN: ${file(./config/${opt:stage}/secrets.yml):RedShiftSecretArn}
      REDSHIFT_DB: ${env:REDSHIFT_DB}
      REDSHIFT_HUBSPOT_SCHEMA: ${env:REDSHIFT_HUBSPOT_SCHEMA}
      HUBSPOT_ACCESS_TOKEN_ARN: ${env:HUBSPOT_ACCESS_TOKEN_ARN}
    vpc: ${file(./config/${opt:stage}/vpc.yml):RedShiftVpc}
    timeout: 300
    layers:
      - ${file(./config/${opt:stage}/layers.yml):AwsWranglerLayer}
      - ${file(./config/${opt:stage}/layers.yml):HubSpotLayer}

Glue: ${file(./glue.yml):Glue}

stepFunctions: ${file(./stepfunctions.yml):stepFunctions}

resources:
  Resources:
    loadHubSpotRole: ${file(./config/${opt:stage}/roles.yml):LoadHubSpotRole}